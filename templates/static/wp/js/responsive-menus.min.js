var genesisMenuParams = "undefined" === typeof genesis_responsive_menu ? "" : genesis_responsive_menu,
	genesisMenusUnchecked = genesisMenuParams.menuClasses,
	genesisMenus = {},
	menusToCombine = [];
! function(a, b) {
	"use strict";

	function h(a) {
		if (b(s(genesisMenus)).find(".sub-menu").before(a.submenu), null !== menusToCombine) {
			var c = genesisMenus.others.concat(menusToCombine[0]);
			b(s(c)).before(a.menu)
		} else b(s(genesisMenus.others)).before(a.menu)
	}

	function i() {
		b(s(genesisMenus)).addClass(g)
	}

	function j() {
		var a = b('button[id^="genesis-mobile-"]').attr("id");
		"undefined" !== typeof a && (p(a), o(a), l(a))
	}

	function k() {
		var a = b(this),
			c = a.next("nav"),
			d = "class";
		a.attr("id", "genesis-mobile-" + b(c).attr(d).match(/nav-\w*\b/))
	}

	function l(a) {
		if (null != menusToCombine) {
			var c = menusToCombine[0],
				d = b(menusToCombine).filter(function(a) {
					return a > 0 ? a : void 0
				});
			"none" !== q(a) ? (b.each(d, function(a, d) {
				b(d).find(".menu > li").addClass("moved-item-" + d.replace(".", "")).appendTo(c + " ul.genesis-nav-menu")
			}), b(s(d)).hide()) : (b(s(d)).show(), b.each(d, function(a, c) {
				b(".moved-item-" + c.replace(".", "")).appendTo(c + " ul.genesis-nav-menu").removeClass("moved-item-" + c.replace(".", ""))
			}))
		}
	}

	function m() {
		var a = b(this);
		r(a, "aria-pressed"), r(a, "aria-expanded"), a.toggleClass("activated"), a.next("nav").slideToggle("fast")
	}

	function n() {
		var a = b(this),
			c = a.closest(".menu-item").siblings();
		r(a, "aria-pressed"), r(a, "aria-expanded"), a.toggleClass("activated"), a.next(".sub-menu").slideToggle("fast"), c.find("." + f).removeClass("activated").attr("aria-pressed", "false"), c.find(".sub-menu").slideUp("fast")
	}

	function o(a) {
		var c = b("." + g + " .js-superfish"),
			d = "destroy";
		"function" === typeof c.superfish && ("none" === q(a) && (d = {
			delay: 100,
			animation: {
				opacity: "show",
				height: "show"
			},
			dropShadows: !1,
			speed: "fast"
		}), c.superfish(d))
	}

	function p(a) {
		return "none" !== q(a) ? !0 : (b("." + e + ", ." + g + " .sub-menu-toggle").removeClass("activated").attr("aria-expanded", !1).attr("aria-pressed", !1), void b("." + g + ", " + g + " .sub-menu").attr("style", ""))
	}

	function q(b) {
		var c = a.getElementById(b),
			d = window.getComputedStyle(c);
		return d.getPropertyValue("display")
	}

	function r(a, b) {
		a.attr(b, function(a, b) {
			return "false" === b
		})
	}

	function s(a) {
		var c = b.map(a, function(a) {
			return a
		});
		return c.join(",")
	}

	function t() {
		var a = [];
		return null !== menusToCombine && b.each(menusToCombine, function(b, c) {
			a.push(c.valueOf())
		}), b.each(genesisMenus.others, function(b, c) {
			a.push(c.valueOf())
		}), a.length > 0 ? a : null
	}
	b.each(genesisMenusUnchecked, function(a) {
		genesisMenus[a] = [], b.each(this, function(c, d) {
			var e = d,
				f = b(d);
			f.length > 1 ? b.each(f, function(c) {
				var f = e + "-" + c;
				b(this).addClass(f.replace(".", "")), genesisMenus[a].push(f), "combine" === a && menusToCombine.push(f)
			}) : 1 == f.length && (genesisMenus[a].push(e), "combine" === a && menusToCombine.push(e))
		})
	}), "undefined" == typeof genesisMenus.others && (genesisMenus.others = []), 1 == menusToCombine.length && (genesisMenus.others.push(menusToCombine[0]), genesisMenus.combine = null, menusToCombine = null);
	var d = {},
		e = "menu-toggle",
		f = "sub-menu-toggle",
		g = "genesis-responsive-menu";
	d.init = function() {
		if (0 != b(t()).length) {
			var a = "undefined" !== typeof genesisMenuParams.menuIconClass ? genesisMenuParams.menuIconClass : "genesis-mobile-nav-primary:before",
				c = "undefined" !== typeof genesisMenuParams.subMenuIconClass ? genesisMenuParams.subMenuIconClass : "sub-menu-toggle:before",
				d = {
					menu: b("<button />", {
						"class": e,
						"aria-expanded": !1,
						"aria-pressed": !1,
						role: "button"
					}).append(genesisMenuParams.mainMenu),
					submenu: b("<button />", {
						"class": f,
						"aria-expanded": !1,
						"aria-pressed": !1,
						role: "button"
					}).append(b("<span />", {
						"class": "screen-reader-text",
						text: genesisMenuParams.subMenu
					}))
				};
			i(), h(d), b("." + e).addClass(a), b("." + f).addClass(c), b("." + e).on("click.genesisMenu-mainbutton", m).each(k), b("." + f).on("click.genesisMenu-subbutton", n), b(window).on("resize.genesisMenu", j).triggerHandler("resize.genesisMenu")
		}
	}, b(a).ready(function() {
		null !== t() && d.init()
	})
}(document, jQuery);